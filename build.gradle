import org.apache.tools.ant.filters.*;

apply plugin: 'java'
apply plugin: 'java-library-distribution'
apply plugin: 'distribution'

def propertyOrDefault(name, defaultValue) {
    return project.hasProperty(name) ? project.getProperty(name) : defaultValue
}

group = 'org.elasticsearch'
version = propertyOrDefault('plugin_version', '2.3.3')
description = 'SRV Discovery Plugin'

def elasticsearch_version = propertyOrDefault('elasticsearch_version', '2.3.3')
def lucene_version = propertyOrDefault('lucene_version', '5.5.0')

configurations {
    providedCompile
}

processResources {
    expand(project.properties)
}

repositories {
    mavenCentral()
}

dependencies {
    providedCompile "org.elasticsearch:elasticsearch:$elasticsearch_version"
    providedCompile (group: 'org.elasticsearch', name: 'elasticsearch', version: elasticsearch_version, classifier: 'tests')
    compile 'dnsjava:dnsjava:2.1.7'
    testCompile "org.apache.lucene:lucene-test-framework:$lucene_version"
    testCompile 'org.hamcrest:hamcrest-library:1.3'
    testCompile 'junit:junit:4.11'
    testCompile 'com.carrotsearch.randomizedtesting:randomizedtesting-runner:2.1.10'
}

jar {
    manifest {
        attributes("Class-Path": configurations.compile.collect { "lib/$it.name" }.join(' '))
    }
}

distributions {
    main {
        contents {
            into '/'
        }
    }
}

compileJava {
    sourceSets.main.compileClasspath += configurations.providedCompile
    sourceSets.test.compileClasspath += configurations.providedCompile
    sourceSets.test.runtimeClasspath += configurations.providedCompile
    sourceSets.test.output.resourcesDir = null
}
